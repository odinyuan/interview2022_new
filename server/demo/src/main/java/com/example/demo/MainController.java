package com.example.demo;

import org.springframework.web.bind.annotation.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

import java.util.*;
//@RestController
//public class MainController {
//
//    @GetMapping("/")
//    public String index() {
//        return "Greetings from Spring Boot!";
//    }
//
//}

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@CrossOrigin(origins="http://localhost:3000")
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private LoginRepository loginRepository;

    @Autowired
    private PrescriptionRepository prescriptionRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String last_name
            , @RequestParam String gender) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();

        n.setName(last_name);
        n.setGender(gender);
        userRepository.save(n);
        return "Saved";
    }

    @PostMapping(path="/addTodo") // Map ONLY POST Requests
    public @ResponseBody Integer addNewTodo (@RequestParam int pid, @RequestParam Long issue_date, @RequestParam String content, @RequestParam boolean status) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        Prescription p = new Prescription();
        p.setPid(pid);
        p.setIssue_date(issue_date);
        p.setContent(content);
        p.setStatus(status);
        prescriptionRepository.save(p);
        return p.getId();

        //return prescriptionRepository.getID();
        //return "Saved";
        //return prescriptionRepository.setNewTodo(id,issue_date,content,status);
    }

    @PostMapping(path="/updateTodo") // Map ONLY POST Requests
    public @ResponseBody String updateTodo (@RequestParam Integer id
            , @RequestParam boolean status, @RequestParam Long issue_date, @RequestParam String content,@RequestParam int pid) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request



        Prescription p = new Prescription();
        p.setId(id);
        p.setPid(pid);
        p.setContent(content);
        p.setIssue_date(issue_date);
        p.setStatus(status);
        prescriptionRepository.save(p);
        return "Saved";
    }


    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/id/{id}")
    public @ResponseBody Iterable<User> getUsersByID(@PathVariable int id) {
        // This returns a JSON or XML with the users
        return userRepository.findById(id);
    }

    @GetMapping(path="/prescription/{id}")
    public @ResponseBody Iterable<Prescription> getPrescriptionsByID(@PathVariable int id) {
        // This returns a JSON or XML with the users
        return prescriptionRepository.findByPid(id);
    }

//    @GetMapping(path="/login",method = RequestMethod.POST)
//    public boolean toLogin(@RequestBody JSONObject params) {
//        String id = params.getString("id").trim());
//        String password = params.getString("passwd").trim());
//        // todo 实现方法
//
//        int INT_ID = int(id);
//
//        return loginRepository.existsByIdAndPassword(INT_ID,password);
//    }

    @GetMapping(path="/login/{id}/{passwd}")
    public @ResponseBody boolean toLogin(@PathVariable int id,@PathVariable String passwd) {
        //String id = params.getString("id").trim());
        //String password = params.getString("passwd").trim());
        // todo 实现方法

        //int INT_ID = int(id);
        //return "ID: " + id + ", name: " + passwd;
        return loginRepository.existsByIdAndPasswd(id,passwd);
    }

}
